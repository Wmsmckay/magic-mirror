image: karsten13/magicmirror:alpine
imagePullPolicy: Always

replicaCount: 1

# This will use the default deployment strategy unless it is overriden
deploymentStrategy: {}

# Set security context for MagicMirror pod
securityContext:
  fsGroup: 1000
  runAsUser: 1000
  runAsGroup: 1000

# if running without ingress:
# run service as loadbalancer, your can access your MagicMirror under 192.168.0.38:8080
# service:
#   type: LoadBalancer
#   port: 8080
#   externalIPs:
#     - 192.168.0.38

service:
  type: ClusterIP
  port: 8080

ingress:
  # type: "nginx"
  type: "traefik"
  enabled: true
  hostname: ""
  path: "/mm"
  tls: false

# Environment variables to attach to the pods
env: []
#   - name: TZ
#     value: Europe/Berlin

persistence:
  enabled: false
  ## Set annotations on pvc
  annotations: {}
  ## Specify an existing volume claim instead of creating a new one.
  ## When using this option all following options like storageClass, accessMode and size are ignored.
  # existingClaim:

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass:
  accessMode: ReadWriteOnce
  size: 1Gi
  # hostPath: /home
  # persistentVolumeReclaimPolicy: Recycle

# List of modules to install.
modules:
  install: []
# For example:
# modules:
#   install:
#     - "https://gitlab.com/khassel/MMM-RepoStats"
#     - "https://github.com/jalibu/MMM-RAIN-MAP"

config: |
  language: "en",
  locale: "en-US",
  logLevel: ["INFO", "LOG", "WARN", "ERROR"], // Add "DEBUG" for even more logging
  timeFormat: 24,
  units: "metric",
  modules: [
    {
      module: "alert",
    },
    {
      module: "updatenotification",
      position: "top_bar"
    },
    {
      module: "clock",
      position: "top_left"
    },
    {
      module: "calendar",
      header: "US Holidays",
      position: "top_left",
      config: {
        calendars: [
          {
            symbol: "calendar-check",
            url: "webcal://www.calendarlabs.com/ical-calendar/ics/76/US_Holidays.ics"					}
        ]
      }
    },
    {
      module: "compliments",
      position: "lower_third"
    },
    {
      module: "weather",
      position: "top_right",
      config: {
        weatherProvider: "openweathermap",
        type: "current",
        location: "New York",
        locationID: "5128581", //ID from http://bulk.openweathermap.org/sample/city.list.json.gz; unzip the gz file and find your city
        apiKey: "YOUR_OPENWEATHER_API_KEY"
      }
    },
    {
      module: "weather",
      position: "top_right",
      header: "Weather Forecast",
      config: {
        weatherProvider: "openweathermap",
        type: "forecast",
        location: "New York",
        locationID: "5128581", //ID from http://bulk.openweathermap.org/sample/city.list.json.gz; unzip the gz file and find your city
        apiKey: "YOUR_OPENWEATHER_API_KEY"
      }
    },
    {
      module: "newsfeed",
      position: "bottom_bar",
      config: {
        feeds: [
          {
            title: "New York Times",
            url: "https://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml"
          }
        ],
        showSourceTitle: true,
        showPublishDate: true,
        broadcastNewsFeeds: true,
        broadcastNewsUpdates: true
      }
    },
  ]

css: |
  /* put your custom css here */