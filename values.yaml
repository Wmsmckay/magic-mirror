image: karsten13/magicmirror:alpine
imagePullPolicy: Always

replicaCount: 1

# This will use the default deployment strategy unless it is overriden
deploymentStrategy: {}

# Set security context for MagicMirror pod
securityContext:
  fsGroup: 1000
  runAsUser: 1000
  runAsGroup: 1000

# if running without ingress:
# run service as loadbalancer, your can access your MagicMirror under 192.168.0.38:8080
# service:
#   type: LoadBalancer
#   port: 8080
#   externalIPs:
#     - 192.168.0.38

service:
  type: ClusterIP
  port: 8080

ingress:
  # type: "nginx"
  type: "traefik"
  enabled: true
  hostname: ""
  path: "/mm"
  tls: false

config:
  file: "config/config.js"

# List of modules to install.
# For example:
# modules:
#   install:
#     - "https://github.com/jclarke0000/MMM-DarkSkyForecast"
#     - "https://github.com/sdetweil/MyCovid19"
modules:
  install: []

# Environment variables to attach to the pods
env:
  - name: TZ
    value: Europe/Berlin

persistence:
  enabled: false
  ## Set annotations on pvc
  annotations: {}
  ## Specify an existing volume claim instead of creating a new one.
  ## When using this option all following options like storageClass, accessMode and size are ignored.
  # existingClaim:

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass:
  accessMode: ReadWriteOnce
  size: 1Gi
  # hostPath: /home
  # persistentVolumeReclaimPolicy: Recycle

secrets: {}
# specify secrets (better in own file)
#   darkSkyApi: XXXXXXXXXXXXXXXXXXXXXX